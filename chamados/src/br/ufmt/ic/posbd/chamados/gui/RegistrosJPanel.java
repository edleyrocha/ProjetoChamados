/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.ufmt.ic.posbd.chamados.gui;

import br.ufmt.ic.posbd.chamados.FabricaDAO;
import br.ufmt.ic.posbd.chamados.dao.RegistrosDAO;
import br.ufmt.ic.posbd.chamados.dao.SolicitanteDAO;
import br.ufmt.ic.posbd.chamados.tableModel.RegistrosTableModel;
import br.ufmt.ic.posbd.chamados.tableModel.SolicitanteTableModel;
import br.ufmt.ic.posbd.chamadosMySQL.entidade.Hardware;
import br.ufmt.ic.posbd.chamadosPostgres.entidade.Registros;
import br.ufmt.ic.posbd.chamadosPostgres.entidade.Solicitante;
import br.ufmt.ic.posbd.chamadosPostgres.entidade.Status;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author edy
 */
public class RegistrosJPanel extends javax.swing.JPanel {

    private SolicitanteTableModel tableModel_Solicitante;
    private SolicitanteDAO dao_Solicitante = FabricaDAO.criarSolicitanteDAO();

    private RegistrosTableModel tableModel_Registros;
    private RegistrosDAO dao_Registros = FabricaDAO.criarRegistrosDAO();

    /**
     * Creates new form ChamadosJPanel
     */
    public RegistrosJPanel() {
        tableModel_Registros = new RegistrosTableModel(dao_Registros.listar());

        initComponents();
        CarregarComboBOXHardware();
        CarregarComboBOXSolicitante();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        idJLabel = new javax.swing.JLabel();
        IDJTextField = new javax.swing.JTextField();
        HardwareJLabel = new javax.swing.JLabel();
        DescricaoJTextField = new javax.swing.JTextField();
        HardwareLabel = new javax.swing.JLabel();
        HardwareJComboBox = new javax.swing.JComboBox<>();
        SolicitanteJLabel = new javax.swing.JLabel();
        SolicitanteJComboBox = new javax.swing.JComboBox<>();
        ExcluirJButton = new javax.swing.JButton();
        CancelarJButton = new javax.swing.JButton();
        EditarjButton = new javax.swing.JButton();
        SalvarJButton = new javax.swing.JButton();
        LimparJButton = new javax.swing.JButton();
        ListarJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaJTable = new javax.swing.JTable();
        FecharjButton = new javax.swing.JButton();

        idJLabel.setText("Id:");

        IDJTextField.setEnabled(false);

        HardwareJLabel.setText("Descricao:");

        HardwareLabel.setText("Hardware:");

        HardwareJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        SolicitanteJLabel.setText("Solicitante:");

        SolicitanteJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        ExcluirJButton.setText("Excluir");
        ExcluirJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcluirJButtonActionPerformed(evt);
            }
        });

        CancelarJButton.setText("Cancelar");
        CancelarJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarJButtonActionPerformed(evt);
            }
        });

        EditarjButton.setText("Editar");
        EditarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarjButtonActionPerformed(evt);
            }
        });

        SalvarJButton.setText("Salvar");
        SalvarJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalvarJButtonActionPerformed(evt);
            }
        });

        LimparJButton.setText("Limpar");
        LimparJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimparJButtonActionPerformed(evt);
            }
        });

        ListarJButton.setText("Listar");
        ListarJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListarJButtonActionPerformed(evt);
            }
        });

        tabelaJTable.setModel(tableModel_Registros);
        jScrollPane1.setViewportView(tabelaJTable);

        FecharjButton.setText("Fechar Chamado");
        FecharjButton.setEnabled(false);
        FecharjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FecharjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(4, 4, 4)
                                    .addComponent(HardwareLabel))
                                .addComponent(SolicitanteJLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(idJLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(HardwareJLabel, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SolicitanteJComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(HardwareJComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DescricaoJTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(IDJTextField)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(ListarJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LimparJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(FecharjButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SalvarJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(EditarjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(CancelarJButton)
                        .addGap(6, 6, 6)
                        .addComponent(ExcluirJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IDJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idJLabel))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HardwareJLabel)
                    .addComponent(DescricaoJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(HardwareLabel))
                    .addComponent(HardwareJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SolicitanteJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SolicitanteJLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SalvarJButton)
                        .addComponent(ListarJButton)
                        .addComponent(LimparJButton)
                        .addComponent(FecharjButton))
                    .addComponent(EditarjButton)
                    .addComponent(CancelarJButton)
                    .addComponent(ExcluirJButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void CarregarComboBOXHardware() {
        HardwareJComboBox.removeAllItems();
        List<Hardware> Hardware = FabricaDAO.criarHardwareDAO().listar();
        HardwareJComboBox.addItem("Selecione uma Hardware...");
        for (Hardware hardware : Hardware) {
            HardwareJComboBox.addItem(hardware.getNome());
        };
    }

    private void CarregarComboBOXSolicitante() {
        SolicitanteJComboBox.removeAllItems();
        List<Solicitante> Solicitante = FabricaDAO.criarSolicitanteDAO().listar();
        SolicitanteJComboBox.addItem("Selecione uma Solicitante...");
        for (Solicitante solicitante : Solicitante) {
            SolicitanteJComboBox.addItem(solicitante.getNome());
        };
    }
    private void ExcluirJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcluirJButtonActionPerformed
        // TODO add your handling code here:
        if (tabelaJTable.getSelectedRowCount() == 1) {
            int[] linhas = tabelaJTable.getSelectedRows();
            if (JOptionPane.showConfirmDialog(ExcluirJButton,
                    "Deseja realmente excluir?")
                    == JOptionPane.YES_OPTION) {

                for (int i = 0; i < linhas.length; i++) {
                    Registros registros = tableModel_Registros.get(linhas[i]);
                    dao_Registros.excluir(registros.getId());
                }
                JOptionPane.showMessageDialog(tabelaJTable,
                        "Removidos com Sucesso!");
                tableModel_Registros.atualizar(dao_Registros.listar());
            }

        } else {
            JOptionPane.showMessageDialog(tabelaJTable,
                    "Selecione somente 1 linha!");
        }
    }//GEN-LAST:event_ExcluirJButtonActionPerformed

    private void CancelarJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarJButtonActionPerformed
        // TODO add your handling code here:
        LimparForm();
    }//GEN-LAST:event_CancelarJButtonActionPerformed

    private void LimparForm() {
        IDJTextField.setText("");
        DescricaoJTextField.setText("");
        HardwareJComboBox.setSelectedIndex(0);
        SolicitanteJComboBox.setSelectedIndex(0);
    }
    private void EditarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarjButtonActionPerformed
        //        // TODO add your handling code here:
        if (tabelaJTable.getSelectedRowCount() == 1) {
            FecharjButton.setEnabled(true);
            int linha = tabelaJTable.getSelectedRow();
            Registros edicao = tableModel_Registros.get(linha);
            IDJTextField.setText(edicao.getId() + "");
            DescricaoJTextField.setText(edicao.getDescricao());
            HardwareJComboBox.setSelectedItem(edicao.getHardware());
            SolicitanteJComboBox.setSelectedItem(edicao.getSolicitante());

        } else {
            JOptionPane.showMessageDialog(tabelaJTable,
                    "Selecione somente 1 linha!");
        }
    }//GEN-LAST:event_EditarjButtonActionPerformed

    private void SalvarJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalvarJButtonActionPerformed
        // TODO add your handling code here:
        
        SalvarFecharChamado(Status.Aberto);

    }//GEN-LAST:event_SalvarJButtonActionPerformed

    private void SalvarFecharChamado(Status status) {

        if (!DescricaoJTextField.getText().equals("")) {
            Registros registros = new Registros();

            registros.setDescricao(DescricaoJTextField.getText());
            registros.setHardware(HardwareJComboBox.getSelectedItem().toString());
            registros.setSolicitante(SolicitanteJComboBox.getSelectedItem().toString());
            
             registros.setStatus(status.toString());
             
//            if (status == Status.Aberto) {
//                registros.setStatus(status.toString());
//            } else if (status == Status.Fechado) {
//                 registros.setStatus(status.toString());
//            }
           

            if (!IDJTextField.getText().equals("")) {
                int id = Integer.parseInt(IDJTextField.getText());
                registros.setId(id);
                dao_Registros.alterar(registros);
                JOptionPane.showMessageDialog(SalvarJButton,
                        "Atualizado com Sucesso!");
            } else {
                dao_Registros.inserir(registros);
                JOptionPane.showMessageDialog(SalvarJButton,
                        "Inserido com Sucesso!");
            }

            tableModel_Registros.atualizar(dao_Registros.listar());

            LimparForm();

        } else {
            JOptionPane.showMessageDialog(DescricaoJTextField,
                    "Informe o campo nome!");
            DescricaoJTextField.grabFocus();
        }

    }
    private void LimparJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimparJButtonActionPerformed
        // TODO add your handling code here:
        tabelaJTable.setModel(new DefaultTableModel());
    }//GEN-LAST:event_LimparJButtonActionPerformed

    private void ListarJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListarJButtonActionPerformed

        tabelaJTable.setModel(tableModel_Registros);
        tableModel_Registros.atualizar(dao_Registros.listar());
    }//GEN-LAST:event_ListarJButtonActionPerformed

    private void FecharjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FecharjButtonActionPerformed
        // TODO add your handling code here:
          SalvarFecharChamado(Status.Fechado);
          FecharjButton.setEnabled(false);;
    }//GEN-LAST:event_FecharjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelarJButton;
    private javax.swing.JTextField DescricaoJTextField;
    private javax.swing.JButton EditarjButton;
    private javax.swing.JButton ExcluirJButton;
    private javax.swing.JButton FecharjButton;
    private javax.swing.JComboBox<String> HardwareJComboBox;
    private javax.swing.JLabel HardwareJLabel;
    private javax.swing.JLabel HardwareLabel;
    private javax.swing.JTextField IDJTextField;
    private javax.swing.JButton LimparJButton;
    private javax.swing.JButton ListarJButton;
    private javax.swing.JButton SalvarJButton;
    private javax.swing.JComboBox<String> SolicitanteJComboBox;
    private javax.swing.JLabel SolicitanteJLabel;
    private javax.swing.JLabel idJLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaJTable;
    // End of variables declaration//GEN-END:variables
}
